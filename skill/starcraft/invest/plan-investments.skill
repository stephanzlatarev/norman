
# Everything in bold is a memory. Sequences of memories are paths.
# A memory in "Given" is a trigger for the skill.
# A memory in "When" is an input.
# A memory in "Then" is an output.

Skill: Plan investments

Given we are playing a *game*
  which is a "game" of "StarCraft II"

Then we should *advance economy*
  which is a *goal*
And we should *advance military*
  which is a *goal*

When our *minerals* >= 100
Then we should *build a pylon*
  which is a *goal*

When our *minerals* >= 400
And our *pylons* > 0
Then we should *build a nexus*
  which is a *goal*

Samples:
  minerals | pylons | build a pylon | build a nexus
    0      |   0    |   0           |   0
    90     |   0    |   0           |   0
    100    |   0    |   1           |   0
    400    |   0    |   1           |   0
    400    |   1    |   0           |   1

# Norman will parse the skill definition and map it to a brain
# It will pre-train the brain from the description in the text
# Then it will train the brain with the samples. Each sample is a fixed-size tensor which includes all inputs and all outputs.
# Later, users can add more samples to train norman
# Norman can identify samples which don't perform well and ask the user for correction
# Norman can test different output for reocurring samples which don't perform well and add them to the list of samples
# When a user changes the skill to add an input, then norman will adjust the tensor of the brain so that the brain doesn't lose anything learnt

---
